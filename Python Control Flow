# Python Control Flow: Medical Insurance Project

# In this project, you will examine how factors such as age, sex, BMI, number of children, and smoking status contribute to medical insurance costs.
# First, take a look at the code in script.py.

# The function estimate_insurance_cost() estimates the medical insurance cost for an individual, based on five variables:

# age: age of the individual in years
# sex: 0 for female, 1 if male
# bmi: individual’s body mass index
# num_of_children: number of children the individual has
# smoker: 0 for a non-smoker, 1 for a smoker
# These variables are used in the following formula to estimate an individual’s insurance cost:


def estimate_insurance_cost(name, age, sex, bmi, num_of_children, smoker):
  estimated_cost = 250*age - 128*sex + 370*bmi + 425*num_of_children + 24000*smoker - 12500
  print(name + "'s Estimated Insurance Cost: " + str(estimated_cost) + " dollars.")

keanu_insurance_cost = estimate_insurance_cost(name = 'Keanu', age = 29, sex = 1, bmi = 26.2, num_of_children = 3, smoker = 1)
  
# Currently, our function prints out the estimated insurance cost based on the values passed into the function. But it doesn’t do much beyond that.
# It would be much more helpful if our function could provide more insight into how we can lower our insurance cost. 
# We’ll learn to do exactly that by using control flow – if, elif, and else statements – in our code.

# In general, insurance costs are higher for smokers as well as people with a higher BMI. 
# We can use data from the variables smoker and bmi to provide advice on how to lower insurance costs.
# We’ll first create a function that analyzes an individual’s smoking status.
# At the top of your code, define a function called analyze_smoker() that takes an input smoker_status. For now, the function should print smoker_status.
# Inside of the analyze_smoker() function, replace the print statement you wrote in the previous step with an if/else statement that does the following:
# If smoker_status is equal to 1, print "To lower your cost, you should consider quitting smoking."
# Otherwise, print "Smoking is not an issue for you."

def analyze_smoker(smoker_status):
  if smoker_status == 1:
    print("To lower your cost, you should consider quitting smoking.")
  else:
    print("Smoking is not an issue for you.")
    
# Now that we’ve written the analyze_smoker() function, let’s make use of it.
# In the estimate_insurance_cost() function, go to the line of code that prints the estimated insurance cost. 
# On the next line, make a function call to analyze_smoker(), passing in the smoker variable as an argument.

def estimate_insurance_cost(name, age, sex, bmi, num_of_children, smoker):
  estimated_cost = 250*age - 128*sex + 370*bmi + 425*num_of_children + 24000*smoker - 12500
  print(name + "'s Estimated Insurance Cost: " + str(estimated_cost) + " dollars.")
  analyze_smoker(smoker)
  
# Prints: Keanu's Estimated Insurance Cost: 29591.0 dollars. To lower your cost, you should consider quitting smoking.

# Next, create a function that analyzes an individual’s BMI (body mass index).
# Below your analyze_smoker() function, define a function called analyze_bmi() that takes an input bmi_value. For now, the function should print bmi_value.
# Inside of this function we’ll want to notify an individual whether their BMI can be improved, printing a personalized message based on the bmi_value passed in.
# Write code using if, elif and else statements representing each of the following cases:
'''
bmi_value > 30: “Your BMI is in the obese range. To lower your cost, you should significantly lower your BMI.”
bmi_value >= 25 and bmi_value <= 30: “Your BMI is in the overweight range. To lower your cost, you should lower your BMI.”
bmi_value >= 18.5 and bmi_value < 25: “Your BMI is in a healthy range.”
bmi_value < 18.5: “Your BMI is in the underweight range. Increasing your BMI will not help lower your cost, but it will help improve your health.”
'''

def analyze_bmi(bmi):
  if bmi > 30:
    print("Your BMI is in the obese range. To lower your cost, you should significantly lower your BMI.")
  elif bmi >= 25 and bmi <= 30:
    print("Your BMI is in the overweight range. To lower your cost, you should lower your BMI."))
  elif bmi >= 18.5 and bmi < 25: 
    print("Your BMI is in a healthy range.")
  elif bmi < 18.5:
    print("Your BMI is in the underweight range. Increasing your BMI will not help lower your cost, but it will help improve your health.")
    
# In the estimate_insurance_cost() function, under the line of code that calls the analyze_smoker() function make a function call to analyze_bmi(), passing in the bmi variable as an argument.

def estimate_insurance_cost(name, age, sex, bmi, num_of_children, smoker):
  estimated_cost = 250*age - 128*sex + 370*bmi + 425*num_of_children + 24000*smoker - 12500
  print(name + "'s Estimated Insurance Cost: " + str(estimated_cost) + " dollars.")
  analyze_smoker(smoker)
  analyze_bmi(bmi)
  
# Prints: Keanu's Estimated Insurance Cost: 29591.0 dollars. To lower your cost, you should consider quitting smoking.
# Your BMI is in the overweight range. To lower your cost, you should lower your BMI.


# If you’d like additional practice on control flow, here are some ways you might extend this project:
# Use try and except statements to build error control into your code.
# In your analyze_bmi() function, notify the individual how much they need to lower their BMI to bring it to a normal weight range.

def analyze_bmi(bmi):
  if bmi > 30:
    print("Your BMI is in the obese range. To lower your cost, you should significantly lower your BMI.")
  elif bmi >= 25 and bmi <= 30:
    bmi_normal = bmi - 25
    print("Your BMI is in the overweight range. To lower your cost, you should lower your BMI by " + str(bmi_normal))
    return bmi_normal
  elif bmi >= 18.5 and bmi < 25: 
    print("Your BMI is in a healthy range.")
  elif bmi < 18.5:
    bmi_healthy = 18.5 - bmi
    print("Your BMI is in the underweight range. Increasing your BMI will not help lower your cost, but it will help improve your health. You should improve your BMI by " + str(bmi_healthy) + " to be within the healthy range.")
    return bmi_healthy
