# QUARTILES, QUANTILES, AND INTERQUARTILE RANGE

# Over the course of the past few centuries, technological and medical advancements have helped increase the life expectancy of humans. 
# However, as of now, the average life expectancy of humans varies depending on what country you live in.
# In this project, we will investigate a dataset containing information about the average life expectancy in 158 different countries. 
# We will specifically look at how a country’s economic success might impact the life expectancy in that area.

import codecademylib3_seaborn
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("country_data.csv")


# We’ve imported a dataset containing the life expectancy in different countries. The data can be found in the variable named data.
# To begin, let’s get a sense of what this data looks like. Print data.head() to see the first 5 rows of the dataset.
# Look at the names of the columns. What other pieces of information does this dataset contain?

print(data.head())

# Yields: """
      Country	        Life Expectancy	                GDP
0	  Afghanistan	          58.19375	          340.0154254687501
1	  Albania	              75.15624999999999	  2119.7266788750007
2	  Algeria	              73.61874999999998	  2847.8533923125
3	  Angola	              49.01875	          1975.1430451187493
4	  Antigua and Barbuda	  75.05624999999998	  9759.305728124997 """


# Let’s isolate the column that contains the life expectancy and store it in a variable named life_expectancy. 
# We can now use NumPy functions on that column! Let’s use the np.quantile() function to find the quartiles of life_expectancy. 
# Store the result in a variable named life_expectancy_quartiles and print the results.

life_expectancy = data['Life Expectancy']
life_expectancy_quartile = np.quantile(life_expectancy, [0.25, 0.5, 0.75])
print(life_expectancy_quartile)

# Yields: [62.325     72.525     75.4421875]

# Nice work! By looking at those three values you can get a sense of the spread of the data. 
# For example, it seems like some of the data is fairly close together — a quarter of the data is between 72.5 years and 75.4 years.
# Could you predict what the histogram might look like from those three number? 
# Plot the histogram by using the following two lines of code. Does it look how you expected?

plt.hist(life_expectancy)
plt.show()


# Let’s take a moment to think about the meaning of these quartiles. 
# If your country has a life expectancy of 70 years, does that fall in the first, second, third, or final quarter of the data?
# CONCLUSION: It would fall in the second quarter


# GDP is a mesaure of a country’s wealth. Let’s now use the GDP data to see if life expectancy is affected by this value.
# Let’s split the data into two groups based on GDP. If we find the median GDP, we can create two datasets for “low GDP countries” and “high GDP countries.
# To start, let’s isolate the GDP column and store it in a variable named gdp. This should be similar to how you isolated the life expectancy column.
# We now want to find the median GDP. You can use NumPy’s np.median() function, but since the median is also a quantile, we can call np.quanitle().
# Store the median in a variable named median_gdp. Print that variable to see the median.

gdp = data['GDP']
median_gdp = np.quantile(gdp, 0.5)
print(median_gdp)

# Yields: 2938.0781152500003


# Let’s now grab all of the rows from our original dataset that have a GDP less than or equal to the median. 
# Do the same for all of the rows that have a GDP higher than the median. Store those rows in a variable named high_gdp.

low_gdp = data[data['GDP'] <= median_gdp]
high_gdp = data[data['GDP'] >= median_gdp]


# Now that we’ve split the data based on the GDP, let’s see how the life expectancy of each group compares to each other.
# Find the quartiles of the "Life Expectancy" column of low_gdp. Store the quartiles in a variable named low_gdp_quartiles. Print the results.

low_gdp_quartiles = np.quantile(low_gdp['Life Expectancy'], [0, 0.25, 0.5, 0.75])
print(low_gdp_quartiles)

# Yields: [46.1125  56.3375  64.34375 71.7375 ]


# Find the quartiles of the high GDP countries and store them in a variable named high_gdp_quartiles. 

high_gdp_quartiles = np.quantile(high_gdp['Life Expectancy'], [0, 0.25, 0.5, 0.75])
print(high_gdp_quartiles)

# Yields: [55.3125   72.965625 75.15625  80.521875]


# By looking at the quantiles, you should get a sense of the spread and central tendency of these two datasets. 
# But let’s plot a histogram of each dataset to really compare them.
# Remove the two lines of code that are currently plotting the histogram of the original dataset. At the bottom of your code, add these four lines:

plt.hist(high_gdp["Life Expectancy"], alpha = 0.5, label = "High GDP")
plt.hist(low_gdp["Life Expectancy"], alpha = 0.5, label = "Low GDP")
plt.legend()
plt.show()

